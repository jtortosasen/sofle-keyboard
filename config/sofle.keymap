/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/pointing.h>
 #include <dt-bindings/zmk/rgb.h>
 
 #define ZMK_POINTING_DEFAULT_SCRL_VAL 300
 #define BASE 0
 #define LOWER 1
 #define RAISE 2
 #define ADJUST 3
 
 // &pinctrl {
 //     spi3_default: spi3_default {
 //         group1 { psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>; };
 //     };
 //     spi3_sleep: spi3_sleep {
 //         group1 {
 //             psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
 //             low-power-enable;
 //         };
 //     };
 // };
 // &spi3 {
 //     compatible = "nordic,nrf-spim";
 //     status = "okay";
 //     pinctrl-0 = <&spi3_default>;
 //     pinctrl-1 = <&spi3_sleep>;
 //     pinctrl-names = "default", "sleep";
 //     led_strip: ws2812@0 {
 //         compatible = "worldsemi,ws2812-spi";
 //         label = "WS2812";
 //         /* SPI */
 //         reg = <0>; /* ignored, but necessary for SPI bindings */
 //         spi-max-frequency = <4000000>;
 //         /* WS2812 */
 //         chain-length = <30>;
 //         spi-one-frame = <0x70>;
 //         spi-zero-frame = <0x40>;
 //         color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
 //     };
 // };
 //  / {
 //      chosen { zmk,underglow = &led_strip; };
 //  };
 
 / {
     behaviors {
         scroll_mouse: Mouse_Scroller {
             label = "Scroller As Mouse Wheel";
             compatible = "zmk,behavior-sensor-rotate";
             #sensor-binding-cells = <0>;
             bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
 
             tap-ms = <20>;
         };
     };
 
     conditional_layers { compatible = "zmk,conditional-layers"; };
 
     combos {
         compatible = "zmk,combos";
 
         activate_settings {
             bindings = <&mo 3>;
             key-positions = <57 58 59>;
         };
 
         enter {
             bindings = <&kp ENTER>;
             key-positions = <55 56>;
         };
 
         space {
             bindings = <&kp DELETE>;
             key-positions = <54 53>;
         };
 
         swap-layer {
             bindings = <&none>;
             key-positions = <50 51 52>;
         };
     };
 
     keymap {
         compatible = "zmk,keymap";
 
         default_layer {
             display-name = "default";
             bindings = <
 &kp N1      &kp N2  &kp N3          &kp N4           &kp N5  &kp N6                                      &kp N7     &kp N8  &kp N9        &kp N0          &kp MINUS      &kp EQUAL
 &kp TAB     &kp Q   &kp W           &kp E            &kp R   &kp T                                       &kp Y      &kp U   &kp I         &kp O           &kp P          &kp BACKSLASH
 &kp ESCAPE  &kp A   &kp S           &kp D            &kp F   &kp G                                       &kp H      &kp J   &kp K         &kp L           &kp SEMICOLON  &kp SQT
 &mo 2       &kp Z   &kp X           &kp C            &kp V   &kp B          &kp C_MUTE        &none      &kp N      &kp M   &kp COMMA     &kp DOT         &kp FSLH       &mo 2
                     &kp LEFT_ARROW  &kp RIGHT_ARROW  &mo 1   &kp BACKSPACE  &kp LEFT_SHIFT    &kp ENTER  &kp SPACE  &mo 1   &kp UP_ARROW  &kp DOWN_ARROW
             >;
 
             sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &scroll_mouse>;
         };
 
         mod_layer {
             display-name = "mod";
             bindings = <
 &kp F1  &kp F2             &kp F3             &kp F4             &kp F5             &kp F6                    &kp F7    &kp F8         &kp F9    &kp F10            &kp F11     &kp F12
 &trans  &trans             &trans             &trans             &trans             &trans                    &trans    &trans         &trans    &trans             &trans      &trans
 &trans  &sk LEFT_SHIFT     &sk LEFT_CONTROL   &sk LALT           &sk LEFT_COMMAND   &trans                    &trans    &sk RIGHT_GUI  &sk RALT  &sk RIGHT_CONTROL  &sk RSHIFT  &trans
 &trans  &kp LA(LC(LG(Z)))  &kp LA(LC(LG(X)))  &kp LA(LG(LC(C)))  &kp LA(LC(LG(V)))  &trans  &trans    &trans  &mkp MB1  &mkp MB4       &mkp MB5  &trans             &trans      &trans
                            &trans             &trans             &trans             &trans  &trans    &trans  &trans    &trans         &trans    &trans
             >;
 
             sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &scroll_mouse>;
         };
 
         sym_layer {
             display-name = "symbol";
             bindings = <
 &kp LS(N1)  &kp LS(N2)         &kp LS(N3)         &kp LS(N4)         &kp LS(N5)         &kp LS(N6)                    &kp LS(N7)  &kp LS(N8)       &kp LS(N9)        &kp LS(N0)         &kp LS(MINUS)      &kp LS(EQUAL)
 &trans      &kp GRAVE          &none              &none              &none              &none                         &none       &kp EXCLAMATION  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans             &kp LS(BACKSLASH)
 &trans      &sk LEFT_SHIFT     &sk LEFT_CONTROL   &sk LALT           &sk LEFT_COMMAND   &none                         &none       &kp AMPERSAND    &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LS(SEMICOLON)  &kp LS(SQT)
 &trans      &kp LA(LC(LG(Z)))  &kp LA(LC(LG(X)))  &kp LA(LG(LC(C)))  &kp LA(LC(LG(V)))  &none       &trans    &trans  &kp RA(N)   &kp QUESTION     &kp LS(COMMA)     &kp LS(PERIOD)     &kp LS(SLASH)      &trans
                                &trans             &trans             &trans             &trans      &trans    &trans  &trans      &trans           &trans            &trans
             >;
 
             sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &scroll_mouse>;
         };
 
         settings_layer {
             display-name = "settings";
             bindings = <
 &bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
 &ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
 &none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &rgb_ug RGB_ON                             &none  &none  &none  &none  &none  &none
 &none              &none            &none            &none            &none            &rgb_ug RGB_OFF  &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                     &none            &none            &none            &none            &soft_off          &none  &none  &none  &none  &none
             >;
         };
     };
 };
 